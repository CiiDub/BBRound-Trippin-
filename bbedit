#!/usr/bin/env sh

setup_BB_env(){
	if [ -z "$BB_user" ] || [ -z "$BB_host" ]
	then
		echo "BBRound Trippn (bbedit) needs the env variables BB_user and BB_host to be set."
		exit 1
	fi
}

create_tmp_file_if_flag(){
	# If param is -c, --create, -u or --create-unix create file.
	[ -e "$filepath" ] && return # Don't write over a file by accident.
	echo "$params" | grep -Eq -e '--create-unix|--create|-c|-u' || return
	touch "$filepath" && tmp_file=1
}

delete_tmp_file(){
	[ $tmp_file -eq 1 ] || return
	rm "$filepath"
}

is_valid_file_dir(){
	# Chceck if file or dir exists and is readable.
	[ -e "$filepath" ] || { echo "This file does not exits."; exit 1; }
	[ -r "$filepath" ] || { echo "Check permissions on this file."; exit 1; }
}

expand_filepath(){
	# I hope this covers most setups.
	filepath=$(realpaths "$filepath" 2> /dev/null || readlink -f "$filepath" 2> /dev/null)
	# Add a backslash and return if directory.
	[ -d "$filepath" ] && filepath="${filepath}/"
}

run_me(){	
	setup_BB_env
	
	back_to_client="${BB_user}@${BB_host}"
	
	# Input is from STDIN. Example: ls | bbedit
	# Open bbedit on client with piped text from server.
	# shellcheck disable=SC2029 # Variable is meant to expand on client side.
	[ -t 0 ] || { ssh "$back_to_client" bbedit "$@"; exit 0; }

	# Input is a file from a tty.
	host_server=$( hostname )
	params=$( echo "$@" | awk '{ $NF=""; print $0 }' )
	filepath=$( echo "$@" | awk '{ print $NF }' )
	
	tmp_file=0
	create_tmp_file_if_flag
	
	is_valid_file_dir
	expand_filepath
		
	ssh "$back_to_client" bbedit "$params" \"sftp://"${USER}"@"${host_server}"/"${filepath}"\"
	delete_tmp_file
}

run_me "$@"