#!/usr/bin/env sh

is_a_ssh_connection(){
	# Checks for environment variable SSH_CLIENT
	[ -n "$SSH_CLIENT" ] || {
	  echo "Is this an SSH connection." &&
	  echo "Did you use sudo? Remember to pass the user enviroment with -E." &&
	  exit 1
	}
}

setup_BB_vars(){
  # BB_USER needs to be set.
  [ -n  "$BB_USER" ] || {
    echo "The variable BB_USER has not been set."
    exit 1
  }
  # BB_HOST has a default setting but can also be specified.
  [ -n  "$BB_HOST" ] || {
    BB_HOST="$( echo "$SSH_CLIENT" | awk '{print $1}' )"
    [ -n "$BB_HOST" ] && return
    echo "The variable BB_HOST was not set and failed to set automatically." &&
    exit 1
  }
}

setup_server_user_host_string(){
	[ -n "$BB_SSH_HOST" ] && server_user_host_string="$BB_SSH_HOST" && return
	server_user_host_string="${USER}"@"${host_server}"
}

create_tmp_file_if_flag(){
  # If param is -c, --create, -u or --create-unix create file.
  # BBEdit uses these params locally but not when opening a file remotely.
  echo "$params" | grep -Eq -e '--create-unix|--create|-c|-u' || { 
    tmp_file=0 &&
    return 
  }
  [ -e "$filepath" ] && tmp_file=0 && return # Don't write over a file by accident.
  touch "$filepath" && tmp_file=1
}

delete_tmp_file(){
  # BBEdit doesn't create a file on disk until it is saved.
  # The tmp_file is deleted to imitate that behavior remotely.
  [ "$tmp_file" -eq 1 ] || return
  rm "$filepath"
}

is_valid_file_dir(){
  # Check if file or dir (-e)exists and is (-r)readable.
  [ -e "$filepath" ] || { echo "This file does not exits."; exit 1; }
  [ -r "$filepath" ] || { echo "Check permissions on this file."; exit 1; }
}

expand_filepath(){
  # I hope this covers most setups.
  filepath=$( realpaths "$filepath" 2> /dev/null || readlink -f "$filepath" 2> /dev/null )
  # Add a backslash and return if is a (-d)directory.
  [ -d "$filepath" ] && filepath="${filepath}/"
}

run_me(){
  is_a_ssh_connection
  setup_BB_vars
  client_login="${BB_USER}@${BB_HOST}"
  # Input is from STDIN. Example: ls | bbedit
  # Open BBEdit on client with piped input from server.
  # shellcheck disable=SC2029 # Variable is meant to expand on client side.
  [ -t 0 ] || { ssh "$client_login" bbedit "$@"; exit 0; }

  # Input is a file from a tty.
  host_server=$( hostname )
  params=$( echo "$@" | awk '{ $NF=""; print $0 }' )
  filepath=$( echo "$@" | awk '{ print $NF }' )
  
  create_tmp_file_if_flag
  is_valid_file_dir
  
  setup_server_user_host_string
  expand_filepath
  ssh "$client_login" bbedit "$params" \"sftp://"${server_user_host_string}"/"${filepath}"\"
  delete_tmp_file
}

run_me "$@"
